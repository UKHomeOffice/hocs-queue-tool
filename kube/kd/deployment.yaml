---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hocs-queue-tool
  labels:
    version: {{.VERSION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hocs-queue-tool
  template:
    metadata:
      labels:
        name: hocs-queue-tool
        role: hocs-backend
        version: {{.VERSION}}
    spec:
      imagePullSecrets:
        - name: registry-credentials

      containers:
        - name: hocs-queue-tool
          image: quay.io/ukhomeofficedigital/hocs-queue-tool:{{.VERSION}}
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          env:
            - name: JAVA_OPTS
              value: '-Xms512m -Xmx512m -Dhttps.proxyHost=hocs-outbound-proxy.{{.KUBE_NAMESPACE}}.svc.cluster.local -Dhttps.proxyPort=31290 -Dhttp.nonProxyHosts=*.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: SERVER_PORT
              value: '8080'
            - name: SPRING_PROFILES_ACTIVE
              value: 'aws'

            {{ range split .QUEUES "," }}
            - name: {{upper .}}_QUEUE
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: sqs_queue_url
            - name: {{upper .}}_QUEUE_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: access_key_id
            - name: {{upper .}}_QUEUE_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: secret_access_key
            - name: {{upper .}}_DLQ_QUEUE
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: sqs_dlq_url
                  optional: true
            - name: {{upper .}}_DLQ_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: access_key_id
                  optional: true
            - name: {{upper .}}_DLQ_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{$.KUBE_NAMESPACE}}-{{lower .}}-sqs
                  key: secret_access_key
                  optional: true
            {{end}}

          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            initialDelaySeconds: 10
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 20" ]
